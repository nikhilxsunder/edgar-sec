[tox]
envlist = py39, py310, py311, dev, types, check
isolated_build = True

[testenv]
description = Test package installation and runtime dependencies
deps =
    poetry
commands =
    poetry install --no-root --no-interaction
    python -c "import httpx, cachetools, tenacity; print('All runtime dependencies installed successfully!')"

[testenv:dev]
description = Test development dependencies
deps =
    poetry
commands =
    poetry install --no-root --with dev --no-interaction
    python -c "import pytest, mypy, pylint, bandit; print('Development dependencies installed successfully!')"

[testenv:types]
description = Test optional type stubs
deps =
    poetry
commands =
    poetry install --no-root --extras "types" --no-interaction
    python -c "import pkg_resources; pkg_resources.require('types-cachetools'); print('Type stubs installed successfully!')"

[testenv:check]
description = Check all dependencies (runtime + dev + optional)
deps =
    poetry
commands =
    poetry install --no-root --with dev --extras "types" --no-interaction
    python -c "print('All dependencies (runtime, dev, and optional) installed successfully!')"

[testenv:test]
description = Run the test suite
deps =
    poetry
commands =
    poetry install --no-root --with dev --no-interaction
    pytest {posargs:tests/}

[testenv:lint]
description = Run linting checks
deps =
    poetry
commands =
    poetry install --no-root --with dev --no-interaction
    pylint src/edgar_sec/
    mypy src/edgar_sec/
    bandit -r src/edgar_sec/ --exclude src/edgar_sec/__pycache__

[testenv:coverage]
description = Run tests with coverage
deps =
    poetry
commands =
    poetry install --no-root --with dev --no-interaction
    pytest --cov=src/edgar_sec tests/ --cov-report=term
